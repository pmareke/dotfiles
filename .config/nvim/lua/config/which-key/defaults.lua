return {
  mode = { "n", "v" },
  
  L = { ":Lazy<CR>", "Lazy" },
  w = { ":w!<CR>", "Save" },
  x = { ":x<CR>", "Save and Quit" },
  q = { ":q!<CR>", "Quit" },
  c = { ":bd<CR>", "Close Buffer" },
  a = { ":A<CR>", "Alternate" },
  h = { ":nohlsearch<CR>", "No Highlight" },
  n = { ":BufferLineCycleNext<CR>", "Next tab"},
  t = { ":w<CR>:TestFile<cr>", "Test File"},
  tn = { ":w<CR>:TestNearest<cr>", "Test Nearest"},
  tl = { ":w<CR>:TestLast<cr>", "Test Last"},
  tv = { ":w<CR>:TestVisit<cr>", "Test Visit"},
  tc = { "<cmd>VimuxCloseRunner<cr>", "Close Test panel"},
  f = { ":Telescope current_buffer_fuzzy_find<CR>", "Find in file"},
  F = { ":Telescope live_grep<CR>", "Find in files"},
  rn = { "<cmd>lua vim.lsp.buf.rename()<cr>", "Rename" },
  rr = { "<cmd>lua require('spectre').open()<cr>", "Replace" },
  rw = { "<cmd>lua require('spectre').open_visual({select_word=true})<cr>", "Replace Word" },
  b = {
    name = "Buffers",
    f = { "<cmd>Telescope buffers previewer=false<cr>", "Find" },
    W = { "<cmd>noautocmd w<cr>", "Save without formatting (noautocmd)" },
  },
  l = {
    name = "+LSP",
    A = { "<cmd>lua vim.lsp.buf.range_code_action()<cr>", "Range Code Actions" },
    h = { "<cmd>lua vim.lsp.inlay_hint.enable(not vim.lsp.inlay_hint.is_enabled())<CR>", "Toggle Inlay Hints" },
    s = { "<cmd>lua vim.lsp.buf.signature_help()<cr>", "Display Signature Information" },
    f = { "<cmd>lua vim.lsp.buf.format()<cr>", "Format" },
    l = { "<cmd>TroubleToggle document_diagnostics<cr>", "Document Diagnostics (Trouble)" },
    L = { "<cmd>TroubleToggle workspace_diagnostics<cr>", "Workspace Diagnostics (Trouble)" },
    w = { "<cmd>Telescope diagnostics<cr>", "Diagnostics" },
    j = { "<cmd>lua vim.lsp.diagnostic.goto_prev()<cr>", "Previous Diagnostic" },
    k = { "<cmd>lua vim.lsp.diagnostic.goto_next()<cr>", "Next Diagnostic" },
    e = { "<cmd>Telescope quickfix<cr>", "Telescope Quickfix" },
    c = { "<cmd>lua require('config.utils').copyFilePathAndLineNumber()<CR>", "Copy File Path and Line Number" },
  },
  s = {
    name = "+Search",
    f = { "<cmd>Telescope find_files<cr>", "Find File (CWD)" },
    h = { "<cmd>Telescope help_tags<cr>", "Find Help" },
    H = { "<cmd>Telescope highlights<cr>", "Find highlight groups" },
    M = { "<cmd>Telescope man_pages<cr>", "Man Pages" },
    o = { "<cmd>Telescope oldfiles<cr>", "Open Recent File" },
    R = { "<cmd>Telescope registers<cr>", "Registers" },
    t = { "<cmd>Telescope live_grep<cr>", "Live Grep" },
    T = { "<cmd>Telescope grep_string<cr>", "Grep String" },
    k = { "<cmd>Telescope keymaps<cr>", "Keymaps" },
    C = { "<cmd>Telescope commands<cr>", "Commands" },
    l = { "<cmd>Telescope resume<cr>", "Resume last search" },
    c = { "<cmd>Telescope git_commits<cr>", "Git commits" },
    B = { "<cmd>Telescope git_branches<cr>", "Git branches" },
    m = { "<cmd>Telescope git_status<cr>", "Git status" },
    S = { "<cmd>Telescope git_stash<cr>", "Git stash" },
    e = { "<cmd>Telescope frecency<cr>", "Frecency" },
    b = { "<cmd>Telescope buffers<cr>", "Buffers" },
  },
  o = {
    r = { ":OpenInGHRepo<CR>", "Open repository" },
    f = { ":OpenInGHFile<CR>", "Open file" },
    l = { ":OpenInGHFileLines<CR>", "Open line" },
  },
}
