return {
  mode = { "n", "v" },

  L = { ":Lazy<CR>", "Lazy" },
  w = { ":w!<CR>", "Save" },
  x = { ":x<CR>", "Save and Quit" },
  q = { ":q!<CR>", "Quit" },
  c = { ":bd<CR>", "Close Buffer" },
  a = { ":A<CR>", "Alternate" },
  h = { ":nohlsearch<CR>", "No Highlight" },
  n = { ":bnext<CR>", "Next tab" },
  t = { ":w<CR>:TestFile<CR>", "Test file" },
  T = { ":w<CR>:TestLast<CR>", "Test last test" },
  f = { ":Telescope current_buffer_fuzzy_find<CR>", "Find in file" },
  F = { ":Telescope live_grep<CR>", "Find in files" },
  rn = { "<cmd>lua vim.lsp.buf.rename()<CR>", "Rename" },
  b = {
    name = "Buffers",
    f = { "<cmd>Telescope buffers previewer=false<CR>", "Find" },
    W = { "<cmd>noautocmd w<CR>", "Save without formatting (noautocmd)" },
  },
  l = {
    name = "+LSP",
    a = { "<cmd>lua vim.lsp.buf.code_action()<CR>", "Code Actions" },
    A = { "<cmd>lua vim.lsp.buf.range_code_action()<CR>", "Range Code Actions" },
    d = { "<cmd>lua vim.lsp.buf.definition()<CR>", "Go to Definition" },
    e = { "<cmd>lua vim.diagnostic.open_float()<CR>", "Show error" },
    E = { "<cmd>Telescope quickfix<CR>", "Telescope Quickfix" },
    f = { "<cmd>lua vim.lsp.buf.format()<CR>", "Format" },
    h = { "<cmd>lua vim.lsp.buf.hover()<CR>", "Hover" },
    H = { "<cmd>lua vim.lsp.inlay_hint.enable(not vim.lsp.inlay_hint.is_enabled())<CR>", "Toggle Inlay Hints" },
    i = { "<cmd>lua vim.lsp.buf.implementation()<CR>", "Go to implementation" },
    j = { "<cmd>lua vim.lsp.diagnostic.goto_prev()<CR>", "Previous Diagnostic" },
    k = { "<cmd>lua vim.lsp.diagnostic.goto_next()<CR>", "Next Diagnostic" },
    r = { ":Telescope lsp_references<CR>", "Go to References" },
    s = { ":Telescope grep_string<CR>", "Search string" },
    S = { "<cmd>lua vim.lsp.buf.signature_help()<CR>", "Display Signature Information" },
    u = { ":Telescope lsp_incoming_calls<CR>", "Go to usages" },
    w = { "<cmd>Telescope diagnostics<CR>", "Diagnostics" },
    x = { ":URLOpenUnderCursor<CR>", "Open link" },
  },
  s = {
    name = "+Search",
    f = { "<cmd>Telescope find_files<CR>", "Find File (CWD)" },
    h = { "<cmd>Telescope help_tags<CR>", "Find Help" },
    H = { "<cmd>Telescope highlights<CR>", "Find highlight groups" },
    M = { "<cmd>Telescope man_pages<CR>", "Man Pages" },
    o = { "<cmd>Telescope oldfiles<CR>", "Open Recent File" },
    R = { "<cmd>Telescope registers<CR>", "Registers" },
    t = { "<cmd>Telescope live_grep<CR>", "Live Grep" },
    T = { "<cmd>Telescope grep_string<CR>", "Grep String" },
    k = { "<cmd>Telescope keymaps<CR>", "Keymaps" },
    C = { "<cmd>Telescope commands<CR>", "Commands" },
    l = { "<cmd>Telescope resume<CR>", "Resume last search" },
    c = { "<cmd>Telescope git_commits<CR>", "Git commits" },
    B = { "<cmd>Telescope git_branches<CR>", "Git branches" },
    m = { "<cmd>Telescope git_status<CR>", "Git status" },
    S = { "<cmd>Telescope git_stash<CR>", "Git stash" },
    e = { "<cmd>Telescope frecency<CR>", "Frecency" },
    b = { "<cmd>Telescope buffers<CR>", "Buffers" },
  },
  o = {
    r = { ":OpenInGHRepo<CR>", "Open repository" },
    f = { ":OpenInGHFile<CR>", "Open file" },
    l = { ":OpenInGHFileLines<CR>", "Open line" },
  },
}
